// <auto-generated />
using System;
using LanchoneteApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanchoneteApp.Migrations
{
    [DbContext(typeof(LanchoneteContext))]
    partial class LanchoneteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("LanchoneteApp.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2025, 6, 26, 22, 0, 5, 256, DateTimeKind.Local).AddTicks(9757),
                            Email = "joao@email.com",
                            Endereco = "Rua A, 123",
                            Nome = "João Silva",
                            Telefone = "(11) 99999-1111"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2025, 6, 26, 22, 0, 5, 256, DateTimeKind.Local).AddTicks(9760),
                            Email = "maria@email.com",
                            Endereco = "Rua B, 456",
                            Nome = "Maria Santos",
                            Telefone = "(11) 88888-2222"
                        });
                });

            modelBuilder.Entity("LanchoneteApp.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("LanchoneteApp.Models.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("LanchoneteApp.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "Lanches",
                            Descricao = "Hambúrguer com queijo e salada",
                            Disponivel = true,
                            Nome = "X-Burger",
                            Preco = 15.90m
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "Bebidas",
                            Descricao = "Refrigerante 350ml",
                            Disponivel = true,
                            Nome = "Coca-Cola",
                            Preco = 5.50m
                        },
                        new
                        {
                            Id = 3,
                            Categoria = "Acompanhamentos",
                            Descricao = "Porção média de batata frita",
                            Disponivel = true,
                            Nome = "Batata Frita",
                            Preco = 12.00m
                        },
                        new
                        {
                            Id = 4,
                            Categoria = "Lanches",
                            Descricao = "Hambúrguer com alface, tomate e queijo",
                            Disponivel = true,
                            Nome = "X-Salada",
                            Preco = 18.50m
                        },
                        new
                        {
                            Id = 5,
                            Categoria = "Bebidas",
                            Descricao = "Suco natural de laranja 300ml",
                            Disponivel = true,
                            Nome = "Suco Natural",
                            Preco = 7.00m
                        },
                        new
                        {
                            Id = 6,
                            Categoria = "Sobremesas",
                            Descricao = "Sorvete de chocolate com cobertura",
                            Disponivel = true,
                            Nome = "Sorvete",
                            Preco = 8.90m
                        });
                });

            modelBuilder.Entity("LanchoneteApp.Models.Pedido", b =>
                {
                    b.HasOne("LanchoneteApp.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LanchoneteApp.Models.PedidoItem", b =>
                {
                    b.HasOne("LanchoneteApp.Models.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanchoneteApp.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LanchoneteApp.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("LanchoneteApp.Models.Pedido", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
